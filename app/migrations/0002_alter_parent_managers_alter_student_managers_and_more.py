# Generated by Django 5.0.3 on 2024-03-31 19:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='parent',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='student',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='teacher',
            managers=[
            ],
        ),
        migrations.RemoveField(
            model_name='parent',
            name='date_joined',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='email',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='first_name',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='groups',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='is_staff',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='is_superuser',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='last_login',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='last_name',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='password',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='phone_number',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='student',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='user_permissions',
        ),
        migrations.RemoveField(
            model_name='parent',
            name='username',
        ),
        migrations.RemoveField(
            model_name='student',
            name='date_joined',
        ),
        migrations.RemoveField(
            model_name='student',
            name='email',
        ),
        migrations.RemoveField(
            model_name='student',
            name='first_name',
        ),
        migrations.RemoveField(
            model_name='student',
            name='groups',
        ),
        migrations.RemoveField(
            model_name='student',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='student',
            name='is_staff',
        ),
        migrations.RemoveField(
            model_name='student',
            name='is_superuser',
        ),
        migrations.RemoveField(
            model_name='student',
            name='last_login',
        ),
        migrations.RemoveField(
            model_name='student',
            name='last_name',
        ),
        migrations.RemoveField(
            model_name='student',
            name='password',
        ),
        migrations.RemoveField(
            model_name='student',
            name='phone_number',
        ),
        migrations.RemoveField(
            model_name='student',
            name='user_permissions',
        ),
        migrations.RemoveField(
            model_name='student',
            name='username',
        ),
        migrations.RemoveField(
            model_name='subject',
            name='school_group',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='date_joined',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='email',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='first_name',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='groups',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='is_staff',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='is_superuser',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='last_login',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='last_name',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='password',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='phone_number',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='user_permissions',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='username',
        ),
        migrations.AddField(
            model_name='parent',
            name='students',
            field=models.ManyToManyField(related_name='parents', to='app.student'),
        ),
        migrations.AddField(
            model_name='schoolgroup',
            name='subject',
            field=models.ManyToManyField(to='app.subject'),
        ),
        migrations.AddField(
            model_name='schoolgroup',
            name='teacher',
            field=models.ManyToManyField(to='app.teacher'),
        ),
        migrations.AlterField(
            model_name='student',
            name='school_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='app.schoolgroup'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=100, unique=True, verbose_name='Номер телефона')),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='parent',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_profile', to='app.user'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to='app.user'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to='app.user'),
        ),
    ]
